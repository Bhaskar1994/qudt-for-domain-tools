/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package qudt4dt.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (1.0.0-dev)", date = "2014-5-9")
public class Unit implements org.apache.thrift.TBase<Unit, Unit._Fields>, java.io.Serializable, Cloneable, Comparable<Unit> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Unit");

  private static final org.apache.thrift.protocol.TField URL_FIELD_DESC = new org.apache.thrift.protocol.TField("url", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField QUDT_U_FIELD_DESC = new org.apache.thrift.protocol.TField("qudt_u", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField MODELICA_U_FIELD_DESC = new org.apache.thrift.protocol.TField("modelica_u", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField MDAO_U_FIELD_DESC = new org.apache.thrift.protocol.TField("mdao_u", org.apache.thrift.protocol.TType.STRUCT, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new UnitStandardSchemeFactory());
    schemes.put(TupleScheme.class, new UnitTupleSchemeFactory());
  }

  public String url; // required
  public QudtUnit qudt_u; // optional
  public ModelicaUnit modelica_u; // optional
  public MdaoUnit mdao_u; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    URL((short)1, "url"),
    QUDT_U((short)2, "qudt_u"),
    MODELICA_U((short)3, "modelica_u"),
    MDAO_U((short)4, "mdao_u");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // URL
          return URL;
        case 2: // QUDT_U
          return QUDT_U;
        case 3: // MODELICA_U
          return MODELICA_U;
        case 4: // MDAO_U
          return MDAO_U;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.QUDT_U,_Fields.MODELICA_U,_Fields.MDAO_U};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.URL, new org.apache.thrift.meta_data.FieldMetaData("url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUDT_U, new org.apache.thrift.meta_data.FieldMetaData("qudt_u", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, QudtUnit.class)));
    tmpMap.put(_Fields.MODELICA_U, new org.apache.thrift.meta_data.FieldMetaData("modelica_u", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ModelicaUnit.class)));
    tmpMap.put(_Fields.MDAO_U, new org.apache.thrift.meta_data.FieldMetaData("mdao_u", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MdaoUnit.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Unit.class, metaDataMap);
  }

  public Unit() {
  }

  public Unit(
    String url)
  {
    this();
    this.url = url;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Unit(Unit other) {
    if (other.isSetUrl()) {
      this.url = other.url;
    }
    if (other.isSetQudt_u()) {
      this.qudt_u = new QudtUnit(other.qudt_u);
    }
    if (other.isSetModelica_u()) {
      this.modelica_u = new ModelicaUnit(other.modelica_u);
    }
    if (other.isSetMdao_u()) {
      this.mdao_u = new MdaoUnit(other.mdao_u);
    }
  }

  public Unit deepCopy() {
    return new Unit(this);
  }

  @Override
  public void clear() {
    this.url = null;
    this.qudt_u = null;
    this.modelica_u = null;
    this.mdao_u = null;
  }

  public String getUrl() {
    return this.url;
  }

  public Unit setUrl(String url) {
    this.url = url;
    return this;
  }

  public void unsetUrl() {
    this.url = null;
  }

  /** Returns true if field url is set (has been assigned a value) and false otherwise */
  public boolean isSetUrl() {
    return this.url != null;
  }

  public void setUrlIsSet(boolean value) {
    if (!value) {
      this.url = null;
    }
  }

  public QudtUnit getQudt_u() {
    return this.qudt_u;
  }

  public Unit setQudt_u(QudtUnit qudt_u) {
    this.qudt_u = qudt_u;
    return this;
  }

  public void unsetQudt_u() {
    this.qudt_u = null;
  }

  /** Returns true if field qudt_u is set (has been assigned a value) and false otherwise */
  public boolean isSetQudt_u() {
    return this.qudt_u != null;
  }

  public void setQudt_uIsSet(boolean value) {
    if (!value) {
      this.qudt_u = null;
    }
  }

  public ModelicaUnit getModelica_u() {
    return this.modelica_u;
  }

  public Unit setModelica_u(ModelicaUnit modelica_u) {
    this.modelica_u = modelica_u;
    return this;
  }

  public void unsetModelica_u() {
    this.modelica_u = null;
  }

  /** Returns true if field modelica_u is set (has been assigned a value) and false otherwise */
  public boolean isSetModelica_u() {
    return this.modelica_u != null;
  }

  public void setModelica_uIsSet(boolean value) {
    if (!value) {
      this.modelica_u = null;
    }
  }

  public MdaoUnit getMdao_u() {
    return this.mdao_u;
  }

  public Unit setMdao_u(MdaoUnit mdao_u) {
    this.mdao_u = mdao_u;
    return this;
  }

  public void unsetMdao_u() {
    this.mdao_u = null;
  }

  /** Returns true if field mdao_u is set (has been assigned a value) and false otherwise */
  public boolean isSetMdao_u() {
    return this.mdao_u != null;
  }

  public void setMdao_uIsSet(boolean value) {
    if (!value) {
      this.mdao_u = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case URL:
      if (value == null) {
        unsetUrl();
      } else {
        setUrl((String)value);
      }
      break;

    case QUDT_U:
      if (value == null) {
        unsetQudt_u();
      } else {
        setQudt_u((QudtUnit)value);
      }
      break;

    case MODELICA_U:
      if (value == null) {
        unsetModelica_u();
      } else {
        setModelica_u((ModelicaUnit)value);
      }
      break;

    case MDAO_U:
      if (value == null) {
        unsetMdao_u();
      } else {
        setMdao_u((MdaoUnit)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case URL:
      return getUrl();

    case QUDT_U:
      return getQudt_u();

    case MODELICA_U:
      return getModelica_u();

    case MDAO_U:
      return getMdao_u();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case URL:
      return isSetUrl();
    case QUDT_U:
      return isSetQudt_u();
    case MODELICA_U:
      return isSetModelica_u();
    case MDAO_U:
      return isSetMdao_u();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Unit)
      return this.equals((Unit)that);
    return false;
  }

  public boolean equals(Unit that) {
    if (that == null)
      return false;

    boolean this_present_url = true && this.isSetUrl();
    boolean that_present_url = true && that.isSetUrl();
    if (this_present_url || that_present_url) {
      if (!(this_present_url && that_present_url))
        return false;
      if (!this.url.equals(that.url))
        return false;
    }

    boolean this_present_qudt_u = true && this.isSetQudt_u();
    boolean that_present_qudt_u = true && that.isSetQudt_u();
    if (this_present_qudt_u || that_present_qudt_u) {
      if (!(this_present_qudt_u && that_present_qudt_u))
        return false;
      if (!this.qudt_u.equals(that.qudt_u))
        return false;
    }

    boolean this_present_modelica_u = true && this.isSetModelica_u();
    boolean that_present_modelica_u = true && that.isSetModelica_u();
    if (this_present_modelica_u || that_present_modelica_u) {
      if (!(this_present_modelica_u && that_present_modelica_u))
        return false;
      if (!this.modelica_u.equals(that.modelica_u))
        return false;
    }

    boolean this_present_mdao_u = true && this.isSetMdao_u();
    boolean that_present_mdao_u = true && that.isSetMdao_u();
    if (this_present_mdao_u || that_present_mdao_u) {
      if (!(this_present_mdao_u && that_present_mdao_u))
        return false;
      if (!this.mdao_u.equals(that.mdao_u))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_url = true && (isSetUrl());
    list.add(present_url);
    if (present_url)
      list.add(url);

    boolean present_qudt_u = true && (isSetQudt_u());
    list.add(present_qudt_u);
    if (present_qudt_u)
      list.add(qudt_u);

    boolean present_modelica_u = true && (isSetModelica_u());
    list.add(present_modelica_u);
    if (present_modelica_u)
      list.add(modelica_u);

    boolean present_mdao_u = true && (isSetMdao_u());
    list.add(present_mdao_u);
    if (present_mdao_u)
      list.add(mdao_u);

    return list.hashCode();
  }

  @Override
  public int compareTo(Unit other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUrl()).compareTo(other.isSetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.url, other.url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQudt_u()).compareTo(other.isSetQudt_u());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQudt_u()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qudt_u, other.qudt_u);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModelica_u()).compareTo(other.isSetModelica_u());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelica_u()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelica_u, other.modelica_u);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMdao_u()).compareTo(other.isSetMdao_u());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMdao_u()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mdao_u, other.mdao_u);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Unit(");
    boolean first = true;

    sb.append("url:");
    if (this.url == null) {
      sb.append("null");
    } else {
      sb.append(this.url);
    }
    first = false;
    if (isSetQudt_u()) {
      if (!first) sb.append(", ");
      sb.append("qudt_u:");
      if (this.qudt_u == null) {
        sb.append("null");
      } else {
        sb.append(this.qudt_u);
      }
      first = false;
    }
    if (isSetModelica_u()) {
      if (!first) sb.append(", ");
      sb.append("modelica_u:");
      if (this.modelica_u == null) {
        sb.append("null");
      } else {
        sb.append(this.modelica_u);
      }
      first = false;
    }
    if (isSetMdao_u()) {
      if (!first) sb.append(", ");
      sb.append("mdao_u:");
      if (this.mdao_u == null) {
        sb.append("null");
      } else {
        sb.append(this.mdao_u);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (qudt_u != null) {
      qudt_u.validate();
    }
    if (modelica_u != null) {
      modelica_u.validate();
    }
    if (mdao_u != null) {
      mdao_u.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UnitStandardSchemeFactory implements SchemeFactory {
    public UnitStandardScheme getScheme() {
      return new UnitStandardScheme();
    }
  }

  private static class UnitStandardScheme extends StandardScheme<Unit> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Unit struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.url = iprot.readString();
              struct.setUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // QUDT_U
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.qudt_u = new QudtUnit();
              struct.qudt_u.read(iprot);
              struct.setQudt_uIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MODELICA_U
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.modelica_u = new ModelicaUnit();
              struct.modelica_u.read(iprot);
              struct.setModelica_uIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MDAO_U
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.mdao_u = new MdaoUnit();
              struct.mdao_u.read(iprot);
              struct.setMdao_uIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Unit struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.url != null) {
        oprot.writeFieldBegin(URL_FIELD_DESC);
        oprot.writeString(struct.url);
        oprot.writeFieldEnd();
      }
      if (struct.qudt_u != null) {
        if (struct.isSetQudt_u()) {
          oprot.writeFieldBegin(QUDT_U_FIELD_DESC);
          struct.qudt_u.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.modelica_u != null) {
        if (struct.isSetModelica_u()) {
          oprot.writeFieldBegin(MODELICA_U_FIELD_DESC);
          struct.modelica_u.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mdao_u != null) {
        if (struct.isSetMdao_u()) {
          oprot.writeFieldBegin(MDAO_U_FIELD_DESC);
          struct.mdao_u.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UnitTupleSchemeFactory implements SchemeFactory {
    public UnitTupleScheme getScheme() {
      return new UnitTupleScheme();
    }
  }

  private static class UnitTupleScheme extends TupleScheme<Unit> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Unit struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetUrl()) {
        optionals.set(0);
      }
      if (struct.isSetQudt_u()) {
        optionals.set(1);
      }
      if (struct.isSetModelica_u()) {
        optionals.set(2);
      }
      if (struct.isSetMdao_u()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetUrl()) {
        oprot.writeString(struct.url);
      }
      if (struct.isSetQudt_u()) {
        struct.qudt_u.write(oprot);
      }
      if (struct.isSetModelica_u()) {
        struct.modelica_u.write(oprot);
      }
      if (struct.isSetMdao_u()) {
        struct.mdao_u.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Unit struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.url = iprot.readString();
        struct.setUrlIsSet(true);
      }
      if (incoming.get(1)) {
        struct.qudt_u = new QudtUnit();
        struct.qudt_u.read(iprot);
        struct.setQudt_uIsSet(true);
      }
      if (incoming.get(2)) {
        struct.modelica_u = new ModelicaUnit();
        struct.modelica_u.read(iprot);
        struct.setModelica_uIsSet(true);
      }
      if (incoming.get(3)) {
        struct.mdao_u = new MdaoUnit();
        struct.mdao_u.read(iprot);
        struct.setMdao_uIsSet(true);
      }
    }
  }

}

